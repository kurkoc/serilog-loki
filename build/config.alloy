 local.file_match "local_files" {
    path_targets = [{"__path__" = "/var/log/iislogs/**/*.log"}]
    sync_period = "5s"
 }

 loki.source.file "log_scrape" {
    targets    = local.file_match.local_files.targets
    forward_to = [loki.process.filter_logs.receiver]
 }
  
 loki.process "filter_logs" {

    stage.drop {
        expression = "^#"
        drop_counter_reason = "comment lines"
    }

    stage.regex {
        expression = "^(?<date>[^ ]*) (?<time>[^ ]*) (?<s_sitename>[^ ]*) (?<s_computername>[^ ]*) (?<s_ip>[^ ]*) (?<cs_method>[^ ]*) (?<cs_uri_stem>[^ ]*) (?<cs_uri_query>[^ ]*) (?<s_port>[^ ]*) (?<cs_username>[^ ]*) (?<c_ip>[^ ]*) (?<cs_version>[^ ]*) (?<cs_user_agent>[^ ]*) (?<cs_referer>[^ ]*) (?<cs_host>[^ ]*) (?<sc_status>[^ ]*) (?<sc_substatus>[^ ]*) (?<sc_win32_status>[^ ]*) (?<sc_bytes>[^ ]*) (?<cs_bytes>[^ ]*) (?<time_taken>[^ ]*)$"
   }

    stage.template {
        source   = "date"
        template = "{{ .date }}T{{ .time }}Z"
    }

    stage.timestamp {
        source = "full_ts"
        format = "2006-01-02T15:04:05Z"
    }

    stage.labels {
        values = {
                cs_host        = "",
                cs_method      = "",
                cs_uri_stem    = "",
                s_computername = "",
                s_ip           = "",
                s_sitename     = "",
                sc_status      = "",
        }
      }

    forward_to = [loki.write.grafana_loki.receiver]
 }
  
 loki.write "grafana_loki" {
     endpoint {
         url = "http://loki:3100/loki/api/v1/push"
     }
 }

 livedebugging {
  enabled = true
}